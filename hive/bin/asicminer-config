#!/hive/sbin/bash

. asic-model

[ -t 1 ] && . colors

function config_gen() {
	RIG_CONF="/hive-config/rig.conf"
	WALLET_CONF="/hive-config/wallet.conf"
	MINER_CONFIG="/config/$THIS_MINER_NAME.conf"
	ASIC_OC_CONF="/hive-config/asic-oc.conf"

	echo "Generating $MINER_CONFIG"

	[ ! -f $WALLET_CONF ] && echo -e "${RED}No wallet config $WALLET_CONF${NOCOLOR}" && return 1

	. $RIG_CONF
	. $WALLET_CONF

	[[ -z $ASICMINER_TEMPLATE ]] && echo -e "${YELLOW}ASICMINER__TEMPLATE is empty${NOCOLOR}" && return 1
	[[ -z $ASICMINER_URL ]] && echo -e "${YELLOW}ASICMINER__URL is empty${NOCOLOR}" && return 1

	pools='[]'
	user_array=($ASICMINER_TEMPLATE)
	password_array=($ASICMINER_PASS)
	ui=0
	pi=0
	for url in $ASICMINER_URL; do
		pool='{}'
		pool=`jq --null-input --argjson pool "$pool" --arg user "${user_array[$ui]}" '$pool + {$user}'`
		pool=`jq --null-input --argjson pool "$pool" --arg url "$url" '$pool + {$url}'`
		#[[ ! -z $ASICMINER_PASS ]] &&
		pool=`jq --null-input --argjson pool "$pool" --arg pass "${password_array[$pi]}" '$pool + {$pass}'`
		pools=`jq --null-input --argjson pools "$pools" --argjson pool "$pool" '$pools + [$pool]'`
		if [[ $ui < $((${#user_array[*]}-1)) ]]; then
			((ui++))
		fi
		if [[ $pi < $((${#password_array[*]}-1)) ]]; then
			((pi++))
		fi
	done

	pools=`jq --null-input --argjson pools "$pools" '{$pools}'`

#	echo $pools | jq .

if [[ $ASIC_MODEL == "Antminer S9" ]] || [[ $ASIC_MODEL == "Antminer S9i" ]]; then
	config_global='{
"api-listen" : true,
"api-network" : true,
"api-groups" : "A:stats:pools:devs:summary:version",
"api-allow" : "A:127.0.0.1,W:127.0.0.1",
"bitmain-use-vil" : true,
"bitmain-freq" : "550",
"bitmain-voltage" : "0706",
"multi-version" : "1"
}'
elif [[ $ASIC_MODEL == "Antminer A3" ]]; then
	config_global='{
"api-listen" : true,
"api-network" : true,
"api-groups" : "A:stats:pools:devs:summary:version",
"api-allow" : "A:127.0.0.1,W:127.0.0.1",
"bitmain-use-vil" : true,
"bitmain-freq" : "0"
}'
elif [[ $ASIC_MODEL == "Antminer D3" ]]; then
	config_global='{
"api-listen" : true,
"api-network" : true,
"api-groups" : "A:stats:pools:devs:summary:version",
"api-allow" : "A:127.0.0.1,W:127.0.0.1",
"bitmain-use-vil" : true,
"bitmain-freq" : "0"
}'
elif [[ $ASIC_MODEL == "Antminer D3 Blissz" ]]; then
	config_global='{
"api-listen" : true,
"api-network" : true,
"api-groups" : "A:stats:pools:devs:summary:version",
"api-allow" : "A:0/0,W:*",
"bitmain-reboot" : true,
"bitmain-fan-mode" : "0",
"bitmain-fan-pwm" : "100",
"bitmain-use-vil" : true,
"bitmain-freq" : "400",
"bitmain-voltage" : "155",
"bitmain-freq1" : "0",
"bitmain-voltage1" : "0",
"bitmain-freq2" : "0",
"bitmain-voltage2" : "0",
"bitmain-freq3" : "0",
"bitmain-voltage3" : "0"
}'
elif [[ $ASIC_MODEL == "Antminer D3 Blissz v2.06 beta" ]]; then
	config_global=`cat $ASIC_OC_CONF`
elif [[ $ASIC_MODEL == "Antminer L3+" ]]; then
	config_global='{
"api-listen" : true,
"api-network" : true,
"api-groups" : "A:stats:pools:devs:summary:version",
"api-allow" : "A:127.0.0.1,W:127.0.0.1",
"bitmain-use-vil" : true,
"bitmain-freq" : "384"
}'
elif [[ $ASIC_MODEL == "Antminer L3++" ]]; then
	config_global='{
"api-listen" : true,
"api-network" : true,
"api-groups" : "A:stats:pools:devs:summary:version",
"api-allow" : "A:127.0.0.1,W:127.0.0.1",
"bitmain-use-vil" : true,
"bitmain-freq" : "450"
}'
elif [[ $ASIC_MODEL == "Antminer T9+" ]]; then
	config_global='{
"api-listen" : true,
"api-network" : true,
"api-groups" : "A:stats:pools:devs:summary:version:noncenum",
"api-allow" : "A:127.0.0.1,W:127.0.0.1",
"bitmain-use-vil" : true,
"bitmain-freq" : "550",
"multi-version" : "1"
}'
fi

	#merge user config options into main config
	if [[ ! -z $ASICMINER_USER_CONFIG ]]; then
		while read -r line; do
			[[ -z $line ]] && continue
			varkey=$(echo $line | awk '{print $1}' | sed 's/\"//g; s/\://g')
			varval=$(echo $line | awk '{print $2}' | sed 's/\"//g')
			config_global=$(echo $config_global | jq '."'$varkey'"="'$varval'"')
		done <<< "$ASICMINER_USER_CONFIG"
	fi

	conf=`jq -n --argjson g "$config_global" --argjson p "$pools" '$p * $g'`

	#replace tpl values in whole file
	[[ -z $EWAL && -z $ZWAL && -z $DWAL ]] && echo -e "${RED}No WAL address is set${NOCOLOR}"
	[[ ! -z $EWAL ]] && conf=$(sed "s/%EWAL%/$EWAL/g" <<< "$conf")
	[[ ! -z $DWAL ]] && conf=$(sed "s/%DWAL%/$DWAL/g" <<< "$conf")
	[[ ! -z $ZWAL ]] && conf=$(sed "s/%ZWAL%/$ZWAL/g" <<< "$conf")
	[[ ! -z $EMAIL ]] && conf=$(sed "s/%EMAIL%/$EMAIL/g" <<< "$conf")
	[[ ! -z $WORKER_NAME ]] && conf=$(sed "s/%WORKER_NAME%/$WORKER_NAME/g" <<< "$conf")

#	echo "$conf" | jq .
	echo "$conf" | jq . > $MINER_CONFIG

}

config_gen